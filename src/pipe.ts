import { Pipeable } from "./types";

export function pipe<A, B>(ab: Pipeable<A, B>): Pipeable<A, B>;
export function pipe<A, B, C>(
  ab: Pipeable<A, B>,
  bc: Pipeable<B, C>,
): Pipeable<A, C>;
export function pipe<A, B, C, D>(
  ab: Pipeable<A, B>,
  bc: Pipeable<B, C>,
  cd: Pipeable<C, D>,
): Pipeable<A, D>;
export function pipe<A, B, C, D, E>(
  ab: Pipeable<A, B>,
  bc: Pipeable<B, C>,
  cd: Pipeable<C, D>,
  de: Pipeable<D, E>,
): Pipeable<A, E>;
export function pipe<A, B, C, D, E, F>(
  ab: Pipeable<A, B>,
  bc: Pipeable<B, C>,
  cd: Pipeable<C, D>,
  de: Pipeable<D, E>,
  ef: Pipeable<E, F>,
): Pipeable<A, F>;
export function pipe<A, B, C, D, E, F, G>(
  ab: Pipeable<A, B>,
  bc: Pipeable<B, C>,
  cd: Pipeable<C, D>,
  de: Pipeable<D, E>,
  ef: Pipeable<E, F>,
  fg: Pipeable<F, G>,
): Pipeable<A, G>;
export function pipe<A, B, C, D, E, F, G, H>(
  ab: Pipeable<A, B>,
  bc: Pipeable<B, C>,
  cd: Pipeable<C, D>,
  de: Pipeable<D, E>,
  ef: Pipeable<E, F>,
  fg: Pipeable<F, G>,
  gh: Pipeable<G, H>,
): Pipeable<A, H>;
export function pipe<A, B, C, D, E, F, G, H, I>(
  ab: Pipeable<A, B>,
  bc: Pipeable<B, C>,
  cd: Pipeable<C, D>,
  de: Pipeable<D, E>,
  ef: Pipeable<E, F>,
  fg: Pipeable<F, G>,
  gh: Pipeable<G, H>,
  hi: Pipeable<H, I>,
): Pipeable<A, I>;
export function pipe<A, B, C, D, E, F, G, H, I, J>(
  ab: Pipeable<A, B>,
  bc: Pipeable<B, C>,
  cd: Pipeable<C, D>,
  de: Pipeable<D, E>,
  ef: Pipeable<E, F>,
  fg: Pipeable<F, G>,
  gh: Pipeable<G, H>,
  hi: Pipeable<H, I>,
  ij: Pipeable<I, J>,
): Pipeable<A, J>;
export function pipe<A, B, C, D, E, F, G, H, I, J, K>(
  ab: Pipeable<A, B>,
  bc: Pipeable<B, C>,
  cd: Pipeable<C, D>,
  de: Pipeable<D, E>,
  ef: Pipeable<E, F>,
  fg: Pipeable<F, G>,
  gh: Pipeable<G, H>,
  hi: Pipeable<H, I>,
  ij: Pipeable<I, J>,
  jk: Pipeable<J, K>,
): Pipeable<A, K>;
export function pipe<A, B, C, D, E, F, G, H, I, J, K, L>(
  ab: Pipeable<A, B>,
  bc: Pipeable<B, C>,
  cd: Pipeable<C, D>,
  de: Pipeable<D, E>,
  ef: Pipeable<E, F>,
  fg: Pipeable<F, G>,
  gh: Pipeable<G, H>,
  hi: Pipeable<H, I>,
  ij: Pipeable<I, J>,
  jk: Pipeable<J, K>,
  kl: Pipeable<K, L>,
): Pipeable<A, L>;
export function pipe<A, B, C, D, E, F, G, H, I, J, K, L, M>(
  ab: Pipeable<A, B>,
  bc: Pipeable<B, C>,
  cd: Pipeable<C, D>,
  de: Pipeable<D, E>,
  ef: Pipeable<E, F>,
  fg: Pipeable<F, G>,
  gh: Pipeable<G, H>,
  hi: Pipeable<H, I>,
  ij: Pipeable<I, J>,
  jk: Pipeable<J, K>,
  kl: Pipeable<K, L>,
  lm: Pipeable<L, M>,
): Pipeable<A, M>;
export function pipe<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(
  ab: Pipeable<A, B>,
  bc: Pipeable<B, C>,
  cd: Pipeable<C, D>,
  de: Pipeable<D, E>,
  ef: Pipeable<E, F>,
  fg: Pipeable<F, G>,
  gh: Pipeable<G, H>,
  hi: Pipeable<H, I>,
  ij: Pipeable<I, J>,
  jk: Pipeable<J, K>,
  kl: Pipeable<K, L>,
  lm: Pipeable<L, M>,
  mn: Pipeable<M, N>,
): Pipeable<A, N>;
export function pipe<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(
  ab: Pipeable<A, B>,
  bc: Pipeable<B, C>,
  cd: Pipeable<C, D>,
  de: Pipeable<D, E>,
  ef: Pipeable<E, F>,
  fg: Pipeable<F, G>,
  gh: Pipeable<G, H>,
  hi: Pipeable<H, I>,
  ij: Pipeable<I, J>,
  jk: Pipeable<J, K>,
  kl: Pipeable<K, L>,
  lm: Pipeable<L, M>,
  mn: Pipeable<M, N>,
  no: Pipeable<N, O>,
): Pipeable<A, O>;
export function pipe<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(
  ab: Pipeable<A, B>,
  bc: Pipeable<B, C>,
  cd: Pipeable<C, D>,
  de: Pipeable<D, E>,
  ef: Pipeable<E, F>,
  fg: Pipeable<F, G>,
  gh: Pipeable<G, H>,
  hi: Pipeable<H, I>,
  ij: Pipeable<I, J>,
  jk: Pipeable<J, K>,
  kl: Pipeable<K, L>,
  lm: Pipeable<L, M>,
  mn: Pipeable<M, N>,
  no: Pipeable<N, O>,
  op: Pipeable<O, P>,
): Pipeable<A, P>;
export function pipe<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(
  ab: Pipeable<A, B>,
  bc: Pipeable<B, C>,
  cd: Pipeable<C, D>,
  de: Pipeable<D, E>,
  ef: Pipeable<E, F>,
  fg: Pipeable<F, G>,
  gh: Pipeable<G, H>,
  hi: Pipeable<H, I>,
  ij: Pipeable<I, J>,
  jk: Pipeable<J, K>,
  kl: Pipeable<K, L>,
  lm: Pipeable<L, M>,
  mn: Pipeable<M, N>,
  no: Pipeable<N, O>,
  op: Pipeable<O, P>,
  pq: Pipeable<P, Q>,
): Pipeable<A, Q>;
export function pipe<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R>(
  ab: Pipeable<A, B>,
  bc: Pipeable<B, C>,
  cd: Pipeable<C, D>,
  de: Pipeable<D, E>,
  ef: Pipeable<E, F>,
  fg: Pipeable<F, G>,
  gh: Pipeable<G, H>,
  hi: Pipeable<H, I>,
  ij: Pipeable<I, J>,
  jk: Pipeable<J, K>,
  kl: Pipeable<K, L>,
  lm: Pipeable<L, M>,
  mn: Pipeable<M, N>,
  no: Pipeable<N, O>,
  op: Pipeable<O, P>,
  pq: Pipeable<P, Q>,
  qr: Pipeable<Q, R>,
): Pipeable<A, R>;
export function pipe<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S>(
  ab: Pipeable<A, B>,
  bc: Pipeable<B, C>,
  cd: Pipeable<C, D>,
  de: Pipeable<D, E>,
  ef: Pipeable<E, F>,
  fg: Pipeable<F, G>,
  gh: Pipeable<G, H>,
  hi: Pipeable<H, I>,
  ij: Pipeable<I, J>,
  jk: Pipeable<J, K>,
  kl: Pipeable<K, L>,
  lm: Pipeable<L, M>,
  mn: Pipeable<M, N>,
  no: Pipeable<N, O>,
  op: Pipeable<O, P>,
  pq: Pipeable<P, Q>,
  qr: Pipeable<Q, R>,
  rs: Pipeable<R, S>,
): Pipeable<A, S>;
export function pipe<
  A,
  B,
  C,
  D,
  E,
  F,
  G,
  H,
  I,
  J,
  K,
  L,
  M,
  N,
  O,
  P,
  Q,
  R,
  S,
  T,
>(
  ab: Pipeable<A, B>,
  bc: Pipeable<B, C>,
  cd: Pipeable<C, D>,
  de: Pipeable<D, E>,
  ef: Pipeable<E, F>,
  fg: Pipeable<F, G>,
  gh: Pipeable<G, H>,
  hi: Pipeable<H, I>,
  ij: Pipeable<I, J>,
  jk: Pipeable<J, K>,
  kl: Pipeable<K, L>,
  lm: Pipeable<L, M>,
  mn: Pipeable<M, N>,
  no: Pipeable<N, O>,
  op: Pipeable<O, P>,
  pq: Pipeable<P, Q>,
  qr: Pipeable<Q, R>,
  rs: Pipeable<R, S>,
  st: Pipeable<S, T>,
): Pipeable<A, T>;
export function pipe<
  A,
  B,
  C,
  D,
  E,
  F,
  G,
  H,
  I,
  J,
  K,
  L,
  M,
  N,
  O,
  P,
  Q,
  R,
  S,
  T,
  U,
>(
  ab: Pipeable<A, B>,
  bc: Pipeable<B, C>,
  cd: Pipeable<C, D>,
  de: Pipeable<D, E>,
  ef: Pipeable<E, F>,
  fg: Pipeable<F, G>,
  gh: Pipeable<G, H>,
  hi: Pipeable<H, I>,
  ij: Pipeable<I, J>,
  jk: Pipeable<J, K>,
  kl: Pipeable<K, L>,
  lm: Pipeable<L, M>,
  mn: Pipeable<M, N>,
  no: Pipeable<N, O>,
  op: Pipeable<O, P>,
  pq: Pipeable<P, Q>,
  qr: Pipeable<Q, R>,
  rs: Pipeable<R, S>,
  st: Pipeable<S, T>,
  tu: Pipeable<T, U>,
): Pipeable<A, U>;
export function pipe<
  A,
  B,
  C,
  D,
  E,
  F,
  G,
  H,
  I,
  J,
  K,
  L,
  M,
  N,
  O,
  P,
  Q,
  R,
  S,
  T,
  U,
  V,
>(
  ab: Pipeable<A, B>,
  bc: Pipeable<B, C>,
  cd: Pipeable<C, D>,
  de: Pipeable<D, E>,
  ef: Pipeable<E, F>,
  fg: Pipeable<F, G>,
  gh: Pipeable<G, H>,
  hi: Pipeable<H, I>,
  ij: Pipeable<I, J>,
  jk: Pipeable<J, K>,
  kl: Pipeable<K, L>,
  lm: Pipeable<L, M>,
  mn: Pipeable<M, N>,
  no: Pipeable<N, O>,
  op: Pipeable<O, P>,
  pq: Pipeable<P, Q>,
  qr: Pipeable<Q, R>,
  rs: Pipeable<R, S>,
  st: Pipeable<S, T>,
  tu: Pipeable<T, U>,
  uv: Pipeable<U, V>,
): Pipeable<A, V>;
export function pipe<
  A,
  B,
  C,
  D,
  E,
  F,
  G,
  H,
  I,
  J,
  K,
  L,
  M,
  N,
  O,
  P,
  Q,
  R,
  S,
  T,
  U,
  V,
  W,
>(
  ab: Pipeable<A, B>,
  bc: Pipeable<B, C>,
  cd: Pipeable<C, D>,
  de: Pipeable<D, E>,
  ef: Pipeable<E, F>,
  fg: Pipeable<F, G>,
  gh: Pipeable<G, H>,
  hi: Pipeable<H, I>,
  ij: Pipeable<I, J>,
  jk: Pipeable<J, K>,
  kl: Pipeable<K, L>,
  lm: Pipeable<L, M>,
  mn: Pipeable<M, N>,
  no: Pipeable<N, O>,
  op: Pipeable<O, P>,
  pq: Pipeable<P, Q>,
  qr: Pipeable<Q, R>,
  rs: Pipeable<R, S>,
  st: Pipeable<S, T>,
  tu: Pipeable<T, U>,
  uv: Pipeable<U, V>,
  vw: Pipeable<V, W>,
): Pipeable<A, W>;
export function pipe<
  A,
  B,
  C,
  D,
  E,
  F,
  G,
  H,
  I,
  J,
  K,
  L,
  M,
  N,
  O,
  P,
  Q,
  R,
  S,
  T,
  U,
  V,
  W,
  X,
>(
  ab: Pipeable<A, B>,
  bc: Pipeable<B, C>,
  cd: Pipeable<C, D>,
  de: Pipeable<D, E>,
  ef: Pipeable<E, F>,
  fg: Pipeable<F, G>,
  gh: Pipeable<G, H>,
  hi: Pipeable<H, I>,
  ij: Pipeable<I, J>,
  jk: Pipeable<J, K>,
  kl: Pipeable<K, L>,
  lm: Pipeable<L, M>,
  mn: Pipeable<M, N>,
  no: Pipeable<N, O>,
  op: Pipeable<O, P>,
  pq: Pipeable<P, Q>,
  qr: Pipeable<Q, R>,
  rs: Pipeable<R, S>,
  st: Pipeable<S, T>,
  tu: Pipeable<T, U>,
  uv: Pipeable<U, V>,
  vw: Pipeable<V, W>,
  wx: Pipeable<W, X>,
): Pipeable<A, X>;
export function pipe<
  A,
  B,
  C,
  D,
  E,
  F,
  G,
  H,
  I,
  J,
  K,
  L,
  M,
  N,
  O,
  P,
  Q,
  R,
  S,
  T,
  U,
  V,
  W,
  X,
  Y,
>(
  ab: Pipeable<A, B>,
  bc: Pipeable<B, C>,
  cd: Pipeable<C, D>,
  de: Pipeable<D, E>,
  ef: Pipeable<E, F>,
  fg: Pipeable<F, G>,
  gh: Pipeable<G, H>,
  hi: Pipeable<H, I>,
  ij: Pipeable<I, J>,
  jk: Pipeable<J, K>,
  kl: Pipeable<K, L>,
  lm: Pipeable<L, M>,
  mn: Pipeable<M, N>,
  no: Pipeable<N, O>,
  op: Pipeable<O, P>,
  pq: Pipeable<P, Q>,
  qr: Pipeable<Q, R>,
  rs: Pipeable<R, S>,
  st: Pipeable<S, T>,
  tu: Pipeable<T, U>,
  uv: Pipeable<U, V>,
  vw: Pipeable<V, W>,
  wx: Pipeable<W, X>,
  xy: Pipeable<X, Y>,
): Pipeable<A, Y>;
export function pipe<
  A,
  B,
  C,
  D,
  E,
  F,
  G,
  H,
  I,
  J,
  K,
  L,
  M,
  N,
  O,
  P,
  Q,
  R,
  S,
  T,
  U,
  V,
  W,
  X,
  Y,
  Z,
>(
  ab: Pipeable<A, B>,
  bc: Pipeable<B, C>,
  cd: Pipeable<C, D>,
  de: Pipeable<D, E>,
  ef: Pipeable<E, F>,
  fg: Pipeable<F, G>,
  gh: Pipeable<G, H>,
  hi: Pipeable<H, I>,
  ij: Pipeable<I, J>,
  jk: Pipeable<J, K>,
  kl: Pipeable<K, L>,
  lm: Pipeable<L, M>,
  mn: Pipeable<M, N>,
  no: Pipeable<N, O>,
  op: Pipeable<O, P>,
  pq: Pipeable<P, Q>,
  qr: Pipeable<Q, R>,
  rs: Pipeable<R, S>,
  st: Pipeable<S, T>,
  tu: Pipeable<T, U>,
  uv: Pipeable<U, V>,
  vw: Pipeable<V, W>,
  wx: Pipeable<W, X>,
  xy: Pipeable<X, Y>,
  yz: Pipeable<Y, Z>,
): Pipeable<A, Z>;
/*
  The provided functions are executed in sequence where the return value
  from the last executed function is passed into the next function.

  Functions can stop function execution and force the pipe to
  prematurely stop execution by throwing.

  The maximum number of functions passed into a pipe is 24.
  This is caused by TypeScript's inference limitations.

  @param fs - List of functions that return T

  @example
  ```ts
  const doubleEvenNumbersPipe = pipe(
    filter((v: number) => !(v%2)),
    (v) => v * 2,
  );
  ```
*/
export function pipe(...fs: Pipeable<unknown, unknown>[]) {
  const length = fs.length;

  return (value: unknown, id = Symbol()) => {
    let latest = value;

    for (let i = 0; i < length; ++i) {
      latest = fs[i](latest, id);
    }

    return latest;
  };
}
